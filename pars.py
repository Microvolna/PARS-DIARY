import requests
import json
import datetime
from aiogram.types import Message
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


from users_cookie_db import get_cookie_from_db


def pars(msg: Message) -> str:
    
    if 'me' in msg.text or 'ball' in msg.text:
        url = 'https://es.ciur.ru/api/ProfileService/GetPersonData'
    elif 'cs' in msg.text:
        url = 'https://es.ciur.ru/api/WidgetService/getClassHours'
    elif 'events' in msg.text:
        url = 'https://es.ciur.ru/api/WidgetService/getEvents'
    elif 'birtdays' in msg.text:
        url = 'https://es.ciur.ru/api/WidgetService/getBirthdays'
    elif 'i_marks' in msg.text:
        url = 'https://es.ciur.ru/api/MarkService/GetTotalMarks'
    elif 'marks' in msg.text:
        url = 'https://es.ciur.ru/api/MarkService/GetSummaryMarks?date='+str(datetime.datetime.now().date())


    cookie = get_cookie_from_db(msg.from_user.id)

    if cookie == '':
        return '–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å —Å–≤–æ—é —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å -> /new'

    headers = {'Cookie':cookie}
    post = requests.post(url, headers=headers)
    print(post.text)
    b = json.loads(post.text)

    if 'Server.UserNotAuthenticated' in post.text:
        return '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–¥–∞–ª–∏—Ç–µ —Ç–µ–∫—É—â—É—é —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å -> /del –∏ –ø–æ—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ —Å–Ω–æ–≤–∞ –ø–æ <a href="https://telegra.ph/Instrukciya-po-registracii-v-bote-04-25">–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.</a>'
    else:
        if 'me' in msg.text:
            if b['children_persons'] == []:
                # –í–æ—à–µ–ª —á–µ—Ä–µ–∑ –∞–∫–∫–∞—É–Ω—Ç —Ä–µ–±–µ–Ω–∫–∞
                if b['user_is_male']:
                    sex = '–ú—É–∂—Å–∫–æ–π'
                else:
                    sex = '–ñ–µ–Ω—Å–∫–∏–π'

                return f'''–§–ò–û - {b['user_fullname']}
–ü–æ–ª - {sex}
–®–∫–æ–ª–∞ - {b['selected_pupil_school']}
–ö–ª–∞—Å—Å - {b['selected_pupil_classyear']}'''
            
            else:
                # –í–æ—à–µ–ª —á–µ—Ä–µ–∑ –∞–∫–∫–∞—É–Ω—Ç —Ä–æ–¥–∏—Ç–µ–ª—è
                msg_text = ''

                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ä–æ–¥–∏—Ç–µ–ª–µ
                msg_text += f"–§–ò–û (—Ä–æ–¥–∏—Ç–µ–ª—è) - {b['user_fullname']}\n"

                try:
                    msg_text += f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - +{b['phone']}"
                except:
                    pass

                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ä–µ–±–µ–Ω–∫–µ/–¥–µ—Ç—è—Ö
                children_counter = 0

                for i in b['children_persons']:
                    children_counter += 1
                    name = ' '.join(i['fullname'].split(' ')[0:-1])
                    dr = i['fullname'].split(' ')[-1]
                    school = i['school']
                    classyear = i['classyear']

                    msg_text += f'\n\n{children_counter} —Ä–µ–±–µ–Ω–æ–∫:\n\n–§–ò–û - {name}\n–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è - {dr}\n–®–∫–æ–ª–∞ - {school}\n–ö–ª–∞—Å—Å - {classyear}'
            
                return msg_text

        elif 'cs' in msg.text:
            return f'''–ö–õ–ê–°–°–ù–´–ô –ß–ê–°

{b['date']}
{b['begin']}-{b['end']}

{b['place']}
{b['theme']}
    '''
        elif 'events' in msg.text:
            if str(b) == '[]':
                return '–ö–∞–∂–µ—Ç—Å—è, –∏–≤–µ–Ω—Ç–æ–≤ –Ω–µ –Ω–∞–º–µ—á–∞–µ—Ç—Å—è)'
            else:
                return f'{b}'
            
        elif 'birtdays' in msg.text:
            if str(b) == '[]':
                return '–ö–∞–∂–µ—Ç—Å—è, –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏–π –Ω–µ –Ω–∞–º–µ—á–∞–µ—Ç—Å—è)'
            else:
                return f"{b[0]['date'].replace('-', ' ')}\n{b[0]['short_name']}"
    
        
        elif 'i_marks' in msg.text:
            msg_text = '–ò—Ç–æ–≥–æ–≤—ã–µ –æ—Ü–µ–Ω–∫–∏:\n\n–ü—Ä–µ–¥–º–µ—Ç   ‚îÇ 1 ‚îÇ 2 ‚îÇ 3 ‚îÇ 4 \n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n'
            for discipline in b['discipline_marks']:
                g = discipline['discipline'].replace('–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π)', '–ê–Ω–≥–ª. –Ø–∑.').replace('–§–∏–∑–∏—á–µ—Å–∫–∞—è –∫—É–ª—å—Ç—É—Ä–∞', '–§–∏–∑-—Ä–∞').replace('–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞', '–õ–∏—Ç–µ—Ä.').replace('–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è', '–¢–µ—Ö–Ω.').replace('–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞', '–ò–Ω—Ñ–æ—Ä–º.').replace('–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ', '–û–±—â–µ—Å—Ç–≤.').replace('–†—É—Å—Å–∫–∏–π —è–∑—ã–∫', '–†—É—Å. –Ø–∑.').replace('–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '–ú–∞—Ç–µ–º.')
                while len(g) < 9:
                    g += ' '
                msg_text += f"{g} ‚îÇ "
                for period_mark in discipline['period_marks']:
                    msg_text += f"{period_mark['mark']} ‚îÇ "
                msg_text += '\n'
            return f'<pre>{msg_text}</pre>'
                

        elif 'marks' in  msg.text:
            msg_text = '–û—Ü–µ–Ω–∫–∏:\n\n'
            for subject in b['discipline_marks']:
                marks = ''
                g = subject['discipline'].replace('–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π)', '–ê–Ω–≥–ª. –Ø–∑.').replace('–§–∏–∑–∏—á–µ—Å–∫–∞—è –∫—É–ª—å—Ç—É—Ä–∞', '–§–∏–∑-—Ä–∞').replace('–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞', '–õ–∏—Ç–µ—Ä.').replace('–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è', '–¢–µ—Ö–Ω.').replace('–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞', '–ò–Ω—Ñ–æ—Ä–º.').replace('–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ', '–û–±—â–µ—Å—Ç–≤.').replace('–†—É—Å—Å–∫–∏–π —è–∑—ã–∫', '–†—É—Å. –Ø–∑.').replace('–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '–ú–∞—Ç–µ–º.')
                while len(g) < 9:
                    g += ' '
                for i in subject['marks']:
                    marks += f"{i['mark']} "

                    if float(subject['average_mark']) >= 4.5:
                        color_mark = 'üü©'
                    else:
                        color_mark = 'üü®'
                    
                msg_text += f"{color_mark} {g}‚îÇ {subject['average_mark']} ‚îÇ {marks}\n"


            return f'<pre>{msg_text}</pre>'
'''
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã

–ó–¥–µ—Å—å —Å–ª–µ–¥—É—é—â–∏–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è callback_handler-—ã:

    - –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–í–∫–ª./–û—Ç–∫–ª.)
    - –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —É–º–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–í–∫–ª./–û—Ç–∫–ª.)
    - –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ (–Ω–∞ –∑–∞–≤—Ç—Ä–∞, –Ω–∞ –Ω–µ–¥–ª—é, –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–µ–Ω—å)
    - –ù–µ–π—Ä–æ—Å–µ—Ç—å –¥–ª—è –ø–æ–º–æ—â–∏ –≤ —É—á–µ–±–µ
'''

from aiogram import Router
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup

from loguru import logger

from utils import db
from utils.hw import hw, chatgpt
from utils.messages import error

router = Router(name=__name__)


# –•–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫
@router.callback_query()
async def callback(call: CallbackQuery) -> None:
    '–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤—Å–µ callback-—Ö–µ–Ω–¥–ª–µ—Ä—ã (–∫–Ω–æ–ø–∫–∏)'

    # –í—ã–≤–æ–¥–∏–º –ª–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª—å
    logger.debug('[c] {}', call.data)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—à–∏–±–∫–∏
    try:
        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        if 'n_n' in call.data:
            # –ú–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            if db.swith_notify(call.from_user.id):
                markup = InlineKeyboardMarkup(inline_keyboard=[
                    [
                        InlineKeyboardButton(text='‚ùå –û—Ç–∫–ª—é—á–∏—Ç—å', callback_data='n_n')]
                    ])
            else:
                markup = InlineKeyboardMarkup(inline_keyboard=[
                    [
                        InlineKeyboardButton(text='‚úÖ –í–∫–ª—é—á–∏—Ç—å', callback_data='n_n')
                    ]])

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await call.message.edit_text(
                'üîî <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –æ—Ü–µ–Ω–æ–∫</b>',
                parse_mode='HTML',
                reply_markup=markup
                )

        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —É–º–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        elif 'n_s' in call.data:
            # –ú–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            if db.swith_notify(call.from_user.id, index='s'):
                markup = InlineKeyboardMarkup(inline_keyboard=[
                    [
                        InlineKeyboardButton(text='‚ùå –û—Ç–∫–ª—é—á–∏—Ç—å', callback_data='n_s')
                    ]])
            else:
                markup = InlineKeyboardMarkup(inline_keyboard=[
                    [
                        InlineKeyboardButton(text='‚úÖ –í–∫–ª—é—á–∏—Ç—å', callback_data='n_s')
                    ]])

            # –û—Ç–ø—Ä–∞–≤–ª–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await call.message.edit_text(
                (
                    'üîî <b>–£–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</b>* - [–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ] '
                    '—É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—Ü–µ–Ω–æ–∫ '
                    '–∏ –ø—Ä–æ—Å—Ç—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n\n'
                    '<blockquote>–°–ø–æ—Ä–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ,'
                    '–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å, –∏–Ω–∞—á–µ –º–æ–∂–µ—Ç –≤—ã–π—Ç–∏ 4!\n\n'
                    '–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /notify\n'
                    '</blockquote>\n'
                    '–∏–ª–∏\n\n'
                    '<blockquote>–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –≤—Å–µ–≥–æ 0.25 –±–∞–ª–ª–∞ –¥–æ –æ—Ü–µ–Ω–∫–∏ 5, —Å—Ç–æ–∏—Ç –ø–æ—Å—Ç–∞—Ä–∞—Ç—å—Å—è!\n'
                    '–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /notify\n'
                    '</blockquote>'
                ),
                parse_mode='HTML',
                reply_markup=markup)

        # –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ
        elif 'hw' in call.data:
            if call.data == 'hw_days':
                markup = InlineKeyboardMarkup(inline_keyboard=[[
                    InlineKeyboardButton(text='–ø–Ω', callback_data='hw_0'),
                    InlineKeyboardButton(text='–≤—Ç', callback_data='hw_1'),
                    InlineKeyboardButton(text='—Å—Ä', callback_data='hw_2'),
                    InlineKeyboardButton(text='—á—Ç', callback_data='hw_3'),
                    InlineKeyboardButton(text='–ø—Ç', callback_data='hw_4'),
                    InlineKeyboardButton(text='—Å–±', callback_data='hw_5')
                ]])

                await call.message.edit_text('–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏:', reply_markup=markup)

            else:
                index = call.data.replace('hw_', '')
                answer = hw(call.from_user.id, index)

                await call.message.edit_text(answer[0], parse_mode='HTML', reply_markup=answer[1])

        # –ù–µ–π—Ä–æ—Å–µ—Ç—å –¥–ª—è –ø–æ–º–æ—â–∏ –≤ —É—á–µ–±–µ
        elif 'chatgpt' in call.data:
            await call.message.edit_text('Chatgpt –¥—É–º–∞–µ—Ç...')
            send_text = chatgpt(call.from_user.id, call.data, call.from_user.first_name)
            await call.message.edit_text(send_text)

    except Exception as e:
        await call.message.edit_text(error(e, call.from_user.language_code))

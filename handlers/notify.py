'''
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏

- –í–∫–ª./–û—Ç–∫–ª. —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
- –í–∫–ª./–û—Ç–∫–ª. —É–º–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
'''

from aiogram import Router
from aiogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.filters import Command

from utils import db
from utils import messages

router = Router(name=__name__)


# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
@router.message(Command('notify'))
async def lessons_msg(msg: Message) -> None:
    '–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ /notify'
    if db.get_cookie(msg.from_user.id):
        await msg.answer('‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:</b>', 'HTML')

        if db.get_notify(msg.from_user.id):
            markup = InlineKeyboardMarkup(inline_keyboard=[
                [
                    InlineKeyboardButton(text='‚ùå –û—Ç–∫–ª—é—á–∏—Ç—å', callback_data='n_n')
                ]])
        else:
            markup = InlineKeyboardMarkup(inline_keyboard=[
                [
                    InlineKeyboardButton(text='‚úÖ –í–∫–ª—é—á–∏—Ç—å', callback_data='n_n')
                ]])

        await msg.answer('üîî <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –æ—Ü–µ–Ω–æ–∫</b>', 'HTML', reply_markup=markup)

        if db.get_notify(msg.from_user.id, index='s'):
            markup = InlineKeyboardMarkup(inline_keyboard=[
                [
                    InlineKeyboardButton(text='‚ùå –û—Ç–∫–ª—é—á–∏—Ç—å', callback_data='n_s')
                ]])
        else:
            markup = InlineKeyboardMarkup(inline_keyboard=[
                [
                    InlineKeyboardButton(text='‚úÖ –í–∫–ª—é—á–∏—Ç—å', callback_data='n_s')
                ]])

        await msg.answer(
            (
                'üîî <b>–£–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</b>* - [–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ] '
                '—É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—Ü–µ–Ω–æ–∫ '
                '–∏ –ø—Ä–æ—Å—Ç—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n\n'
                '<blockquote>–°–ø–æ—Ä–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ,'
                '–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å, –∏–Ω–∞—á–µ –º–æ–∂–µ—Ç –≤—ã–π—Ç–∏ 4!\n\n'
                '–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /notify\n'
                '</blockquote>\n'
                '–∏–ª–∏\n\n'
                '<blockquote>–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –≤—Å–µ–≥–æ 0.25 –±–∞–ª–ª–∞ –¥–æ –æ—Ü–µ–Ω–∫–∏ 5, —Å—Ç–æ–∏—Ç –ø–æ—Å—Ç–∞—Ä–∞—Ç—å—Å—è!\n'
                '–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /notify\n'
                '</blockquote>'
            ),
            parse_mode='HTML',
            reply_markup=markup
        )

        # –¢–µ–∫—Å—Ç: üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
        # –ö–Ω–æ–ø–∫–∞: –ü–µ—Ä–µ–π—Ç–∏
        markup = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏', url='https://t.me/mili_sp_bot')
            ]])
        await msg.answer(
            'üîî <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è</b>',
            'HTML',
            reply_markup=markup
        )

    else:
        # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ä–µ–≥–µ—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        await msg.answer(
            messages.not_auth(msg.from_user.language_code),
            'HTML',
            reply_markup=messages.not_auth_keyboard(msg.from_user.language_code)
        )
